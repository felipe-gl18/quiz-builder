{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/frontend/app/create/create.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"addButton\": \"create-module__HKaWla__addButton\",\n  \"button\": \"create-module__HKaWla__button\",\n  \"container\": \"create-module__HKaWla__container\",\n  \"deleteIcon\": \"create-module__HKaWla__deleteIcon\",\n  \"form\": \"create-module__HKaWla__form\",\n  \"input\": \"create-module__HKaWla__input\",\n  \"optionRow\": \"create-module__HKaWla__optionRow\",\n  \"questionCard\": \"create-module__HKaWla__questionCard\",\n  \"title\": \"create-module__HKaWla__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/felip/work/testtaskquizz/frontend/app/create/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { FormEvent, useState } from \"react\";\r\nimport styles from \"./create.module.css\";\r\nimport { TbTrash } from \"react-icons/tb\";\r\nimport { PiPlusCircle } from \"react-icons/pi\";\r\nimport { BiSave } from \"react-icons/bi\";\r\n\r\ninterface Option {\r\n  id: number;\r\n  text: string;\r\n}\r\n\r\ninterface Question {\r\n  id: number;\r\n  title: string;\r\n  type: \"multiple_choice\" | \"true_false\" | \"short_answer\";\r\n  options: Option[];\r\n}\r\n\r\nexport default function Create() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n\r\n  const addQuestion = () => {\r\n    setQuestions((prev) => [\r\n      ...prev,\r\n      { id: Date.now(), title: \"\", type: \"multiple_choice\", options: [] },\r\n    ]);\r\n  };\r\n\r\n  const removeQuestion = (id: number) => {\r\n    setQuestions((prev) => prev.filter((q) => q.id !== id));\r\n  };\r\n\r\n  const updateQuestionTitle = (id: number, value: string) => {\r\n    setQuestions((prev) =>\r\n      prev.map((q) => (q.id === id ? { ...q, title: value } : q))\r\n    );\r\n  };\r\n\r\n  const addOption = (questionId: number) => {\r\n    setQuestions((prev) =>\r\n      prev.map((q) =>\r\n        q.id === questionId\r\n          ? { ...q, options: [...q.options, { id: Date.now(), text: \"\" }] }\r\n          : q\r\n      )\r\n    );\r\n  };\r\n\r\n  const removeOption = (questionId: number, optionId: number) => {\r\n    setQuestions((prev) =>\r\n      prev.map((q) =>\r\n        q.id === questionId\r\n          ? { ...q, options: q.options.filter((o) => o.id !== optionId) }\r\n          : q\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateOptionText = (\r\n    questionId: number,\r\n    optionId: number,\r\n    value: string\r\n  ) => {\r\n    setQuestions((prev) =>\r\n      prev.map((q) =>\r\n        q.id === questionId\r\n          ? {\r\n              ...q,\r\n              options: q.options.map((o) =>\r\n                o.id === optionId ? { ...o, text: value } : o\r\n              ),\r\n            }\r\n          : q\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateQuestionType = (\r\n    id: number,\r\n    value: \"multiple_choice\" | \"true_false\" | \"short_answer\"\r\n  ) => {\r\n    setQuestions((prev) =>\r\n      prev.map((q) => (q.id === id ? { ...q, type: value } : q))\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:3000/quizzes\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ title, questions }),\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"Failed to create quiz\");\r\n\r\n      // Aqui podemos só exibir mensagem sem tentar ler JSON\r\n      alert(\"Your quiz has been created successfully!\");\r\n\r\n      // resetar formulário\r\n      setTitle(\"\");\r\n      setQuestions([]);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to create quiz.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Create Quiz</h1>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <input\r\n          className={styles.input}\r\n          placeholder=\"Quiz Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n\r\n        {questions.map((question) => (\r\n          <div key={question.id} className={styles.questionCard}>\r\n            <input\r\n              className={styles.input}\r\n              placeholder=\"Question Title\"\r\n              value={question.title}\r\n              onChange={(e) => updateQuestionTitle(question.id, e.target.value)}\r\n            />\r\n\r\n            <TbTrash\r\n              className={styles.deleteIcon}\r\n              size={24}\r\n              onClick={() => removeQuestion(question.id)}\r\n            />\r\n\r\n            <select\r\n              className={styles.input}\r\n              value={question.type || \"multiple_choice\"}\r\n              onChange={(e) =>\r\n                updateQuestionType(\r\n                  question.id,\r\n                  e.target.value as\r\n                    | \"multiple_choice\"\r\n                    | \"true_false\"\r\n                    | \"short_answer\"\r\n                )\r\n              }\r\n            >\r\n              <option value=\"multiple_choice\">Multiple Choice</option>\r\n              <option value=\"true_false\">True / False</option>\r\n              <option value=\"short_answer\">Short Answer</option>\r\n            </select>\r\n\r\n            {question.options.map((option) => (\r\n              <div key={option.id} className={styles.optionRow}>\r\n                <input\r\n                  className={styles.input}\r\n                  placeholder=\"Option Text\"\r\n                  value={option.text}\r\n                  onChange={(e) =>\r\n                    updateOptionText(question.id, option.id, e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n            ))}\r\n            <button\r\n              type=\"button\"\r\n              className={styles.addButton}\r\n              onClick={() => addOption(question.id)}\r\n            >\r\n              <PiPlusCircle size={24} className={styles.addIcon} />\r\n              Add Option\r\n            </button>\r\n          </div>\r\n        ))}\r\n\r\n        <button\r\n          type=\"button\"\r\n          className={styles.addButton}\r\n          onClick={addQuestion}\r\n        >\r\n          <PiPlusCircle size={24} className={styles.addIcon} />\r\n          Add Question\r\n        </button>\r\n        <button type=\"submit\" className={styles.button}>\r\n          <BiSave size={24} className={styles.addIcon} />\r\n          Save Quiz\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}